
ack architecture:
When one party wants to send a message, in order to be sure the other side received it properly, we use this architecture.

party1: message. (send this in loop until receiving ack)
party2: when got message, send ack.(every time receiving the message, send ack)

when the loops are over, party2 has received the message.




Handshake:

client sends client hello. (b'HELLO~<money>~<name>')

server sends server hello to all connected clients, with amount of players (b'HELLO~<players_remaining>).
no need for ack back. If client didn't Received properly the message, it's okay. Server sends this message in a loop.

server waits for enough players, than sends pickled game object, and player index. (b'GAME~<pickled_game>~<player_index_in_player_arr')
making sure every player received this using ack-ack architecture.

than game starts.